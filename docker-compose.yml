version: '3.8'

services:
  redis:
    image: redis
    container_name: redis
    ports:
      - 6379:6379
    networks:
      - mynetwork
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3


  postgresdb:
    image: postgres
    container_name: postgresdb
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: mysecretpassword
      POSTGRES_DB: postgresdb
    ports:
      - 5432:5432
    networks:
      - mynetwork
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5


  vote:
    image: chaitannyaa/multi_container_app:vote
    container_name: vote
    environment:
      REDIS_HOST: redis
    ports:
      - 8501:8501
    depends_on:
      - redis
    networks:
      - mynetwork


  worker:
    image: chaitannyaa/multi_container_app:worker
    container_name: worker
    environment:
      REDIS_HOST: redis
      POSTGRES_HOST: postgresdb
    depends_on:
      - postgresdb
      - redis
    networks:
      - mynetwork
    healthcheck:
      test: ["CMD", "python3", "-c", "import psycopg2; conn = psycopg2.connect(host='postgresdb', database='postgresdb', user='postgres', password='mysecretpassword', port='5432'); conn.close()"]
      interval: 10s
      timeout: 5s
      retries: 5


  result:
    image: chaitannyaa/multi_container_app:result
    container_name: result
    environment:
      POSTGRES_HOST: postgresdb
    ports:
      - 80:3000
    depends_on:
      - postgresdb
    networks:
      - mynetwork
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/"]
      interval: 10s
      timeout: 5s
      retries: 3


networks:
  mynetwork:
    driver: bridge
